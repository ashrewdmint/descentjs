{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/initialize.coffee","app/lib/chart.coffee","app/lib/descent/all.coffee","app/lib/descent/genome.coffee","app/lib/descent/options.coffee","app/lib/descent/organism.coffee","app/lib/descent/random.coffee","app/lib/descent/utility.coffee","app/lib/descent/world.coffee","app/lib/router.coffee","app/lib/view_helper.coffee","app/models/collection.coffee","app/models/model.coffee","app/views/home_view.coffee","app/views/templates/home.hbs","app/views/view.coffee"],"names":[],"mappingszGA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9HA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5HA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;A","sourcesContent":["var Application, options;\n\noptions = {\n  DIE_EXP: 7,\n  MIN_AGE: 4,\n  EXTRA_AGE: 10,\n  BABY_RATE: 5,\n  PMUTATE: 1 / 3,\n  MSCALE: 100,\n  MERCY: 100,\n  TARGET: {\n    red: 255,\n    green: 0,\n    blue: 0\n  },\n  TIME: 1,\n  delay: 0,\n  maxPop: 1000,\n  maxTime: 1000,\n  pDeathFit: 0.26,\n  difficulty: 40,\n  callback: function(world) {\n    var averageColors, children, colors, container, div, div2, h, history, maxHeight, maxWidth, o, square, thingies, w, _i, _len, _ref;\n    $('#container').remove();\n    container = $('<div id=\"container\"></div>');\n    $('body').append(container);\n    history = $('#history');\n    if (!history.length) {\n      history = $('<div id=\"history\"></div>').css('overflow', 'hidden');\n      if (!$('#history').length) {\n        $('body').prepend(history);\n      }\n    }\n    container.css({\n      overflow: 'hidden'\n    });\n    maxHeight = window.innerHeight * 1 / 3;\n    maxWidth = window.innerWidth;\n    thingies = world.organisms.length;\n    square = Math.ceil(Math.sqrt(thingies));\n    w = maxWidth / square;\n    h = maxHeight / square;\n    averageColors = [];\n    _ref = world.organisms;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      o = _ref[_i];\n      colors = [o.genome.red, o.genome.green, o.genome.blue];\n      averageColors.push(colors);\n      div = $('<div></div>').css({\n        backgroundColor: 'rgb(' + colors.join(', ') + ')',\n        width: w,\n        height: h,\n        float: 'left'\n      });\n      container.append(div);\n    }\n    averageColors = _.reduce(averageColors, function(memo, value) {\n      return _.map(memo, function(x, i) {\n        return value[i] + x;\n      });\n    }, [0, 0, 0]);\n    averageColors = _.map(averageColors, function(color) {\n      return Math.round(color / thingies);\n    });\n    div2 = $('<div></div>').css({\n      backgroundColor: 'rgb(' + averageColors.join(', ') + ')',\n      height: 20,\n      float: 'left'\n    });\n    history.append(div2);\n    children = history.children().length;\n    return history.children().css('width', maxWidth / children);\n  }\n};\n\nApplication = {\n  initialize: function() {\n    var Descent, HomeView, Router, chart, opts, w;\n    HomeView = require('views/home_view');\n    Router = require('lib/router');\n    chart = require('lib/chart');\n    Descent = require('lib/descent/all');\n    opts = Descent.utility.mergeOptions(options);\n    w = Descent.world.setup(Descent.world[\"default\"]());\n    w.finished = function() {\n      return console.log(w.latest);\n    };\n    return Descent.world.delay(w, opts);\n  }\n};\n\nmodule.exports = Application;\n","var application;\n\napplication = require('application');\n\n$(function() {\n  return application.initialize();\n});\n","\nmodule.exports = function(data) {\n  var cities, city, color, height, line, margin, svg, width, x, xAxis, y, yAxis;\n  margin = {\n    top: 20,\n    right: 80,\n    bottom: 30,\n    left: 50\n  };\n  width = window.innerWidth - 50 - margin.left - margin.right;\n  height = window.innerHeight * 2 / 3 - 50 - margin.top - margin.bottom;\n  x = d3.scale.linear().range([0, width]);\n  y = d3.scale.linear().range([height, 0]);\n  color = d3.scale.category10();\n  xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\n  yAxis = d3.svg.axis().scale(y).orient(\"left\");\n  line = d3.svg.line().interpolate(\"basis\").x(function(d) {\n    return x(d.date);\n  }).y(function(d) {\n    return y(d.temperature);\n  });\n  svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  data || (data = [\n    {\n      date: '20111001',\n      \"New York\": 63.4,\n      \"San Francisco\": 62.7,\n      \"Austin\": 72.2\n    }, {\n      date: '20111002',\n      \"New York\": 58.0,\n      \"San Francisco\": 59.9,\n      \"Austin\": 67.7\n    }, {\n      date: '20111003',\n      \"New York\": 53.3,\n      \"San Francisco\": 59.1,\n      \"Austin\": 69.4\n    }, {\n      date: '20111004',\n      \"New York\": 55.7,\n      \"San Francisco\": 58.8,\n      \"Austin\": 68.0\n    }\n  ]);\n  color.domain(d3.keys(data[0]).filter(function(key) {\n    return key !== \"date\";\n  }));\n  data.forEach(function(d, i) {\n    d.date = i;\n  });\n  cities = color.domain().map(function(name) {\n    return {\n      name: name,\n      values: data.map(function(d) {\n        return {\n          date: d.date,\n          temperature: +d[name]\n        };\n      })\n    };\n  });\n  x.domain(d3.extent(data, function(d) {\n    return d.date;\n  }));\n  y.domain([\n    d3.min(cities, function(c) {\n      return d3.min(c.values, function(v) {\n        return v.temperature;\n      });\n    }), d3.max(cities, function(c) {\n      return d3.max(c.values, function(v) {\n        return v.temperature;\n      });\n    })\n  ]);\n  svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis);\n  svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\").style(\"text-anchor\", \"end\").text(\"\");\n  city = svg.selectAll(\".city\").data(cities).enter().append(\"g\").attr(\"class\", \"city\");\n  city.append(\"path\").attr(\"class\", \"line\").attr(\"d\", function(d) {\n    return line(d.values);\n  }).style(\"stroke\", function(d) {\n    return color(d.name);\n  });\n  return city.append(\"text\").datum(function(d) {\n    return {\n      name: d.name,\n      value: d.values[d.values.length - 1]\n    };\n  }).attr(\"transform\", function(d) {\n    return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\";\n  }).attr(\"x\", 3).attr(\"dy\", \".35em\").text(function(d) {\n    return d.name;\n  });\n};\n","\nmodule.exports = _.object(_.map(['options', 'utility', 'random', 'genome', 'organism', 'world'], function(name) {\n  return [name, require('lib/descent/' + name)];\n}));\n","var Genome, Random, Utility;\n\nRandom = require('lib/descent/random');\n\nUtility = require('lib/descent/utility');\n\nGenome = {\n  \"default\": function() {\n    return {\n      red: 0,\n      blue: 0,\n      green: 0,\n      size: 0,\n      pmutate: 0.5,\n      pscale: 50\n    };\n  },\n  random: function(minSize, maxSize) {\n    var g, name, _i, _len, _ref;\n    g = this[\"default\"]();\n    g.size = Random.range(minSize, maxSize);\n    g.pmutate = Math.random();\n    g.pscale = Random.range(0, 255);\n    _ref = ['red', 'blue', 'green'];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      name = _ref[_i];\n      g[name] = Random.range(0, 255);\n    }\n    return g;\n  },\n  copy: function(args) {\n    var copied, g, gene, value, _ref;\n    g = this[\"default\"]();\n    _ref = args.genome;\n    for (gene in _ref) {\n      value = _ref[gene];\n      copied = Math.max(this.mutate(value, args.genome.pmutate, args.genome.mscale), 0);\n      if (gene !== 'size') {\n        copied = Math.min(copied, 255);\n      }\n      if (copied !== value && typeof args.callback === 'function') {\n        args.callback(gene, value, copied);\n      }\n      g[gene] = copied;\n    }\n    return g;\n  },\n  mutate: function(value, pmutate, scale) {\n    var mutate;\n    if (!Random.gamble(pmutate)) {\n      return value;\n    }\n    mutate = value * Math.random();\n    if (Random.gamble(0.5)) {\n      mutate = -mutate;\n    }\n    return value + Math.round(Random.normal(scale));\n  },\n  fitness: function(g, options) {\n    return this.fitnessEuclid(g, options);\n  },\n  fitnessEuclid: function(g, options) {\n    var diffs, gene, max, value, _ref;\n    max = 0;\n    diffs = 0;\n    _ref = options.targetGenome;\n    for (gene in _ref) {\n      value = _ref[gene];\n      max += Math.pow(Math.max(value, 255 - value), 2);\n      diffs += Math.pow(value - g[gene], 2);\n    }\n    return Utility.finite(1 - diffs / max);\n  },\n  fitnessPow: function(g, options) {\n    var diff, fit, gene, max, value, _ref;\n    fit = 1;\n    max = 0;\n    _ref = options.targetGenome;\n    for (gene in _ref) {\n      value = _ref[gene];\n      diff = Math.abs(value - g[gene]);\n      fit *= Math.pow(2, -diff);\n    }\n    return fit;\n  },\n  fitnessAbsLinear: function(g, options) {\n    var diff, fit, gene, max, value, _ref;\n    max = 0;\n    diff = 0;\n    _ref = options.targetGenome;\n    for (gene in _ref) {\n      value = _ref[gene];\n      max += Math.max(value, 255 - value);\n      diff += Math.abs(value, -g[gene]);\n    }\n    fit = 1 - diff / max;\n    if (isFinite(fit)) {\n      return fit;\n    } else {\n      return 0;\n    }\n  }\n};\n\nmodule.exports = Genome;\n","\nmodule.exports = {\n  targetGenome: {\n    red: 255,\n    green: 0,\n    blue: 0\n  },\n  initialPop: 100,\n  maxPop: 1000,\n  difficulty: 0.5,\n  pDivideUnfit: 0,\n  pDivideFit: 1,\n  pDeathUnfit: 0.9,\n  pDeathFit: 0.2,\n  doomLine: 0.3,\n  mutationHandicap: -0.5,\n  delay: 1\n};\n","var Genome, Organism, Random, Utility;\n\nGenome = require('lib/descent/genome');\n\nRandom = require('lib/descent/random');\n\nUtility = require('lib/descent/utility');\n\nOrganism = {\n  \"default\": function() {\n    return {\n      genome: Genome[\"default\"](),\n      age: 0,\n      alive: true\n    };\n  },\n  random: function(minSize, maxSize) {\n    var o;\n    o = this[\"default\"]();\n    o.genome = Genome.random(minSize, maxSize);\n    return o;\n  },\n  fitness: function(o, options) {\n    if (o.fitness) {\n      return o.fitness;\n    }\n    return o.fitness = Genome.fitness(o.genome, options);\n  },\n  linear: function(a, b, percent) {\n    return a + percent * (b - a);\n  },\n  pDivide: function(fitness, options) {\n    return this.linear(options.pDivideUnfit, options.pDivideFit, fitness);\n  },\n  pDeath: function(fitness, options) {\n    var max, min, pDoom;\n    pDoom = this.pDivide(options.doomLine, options);\n    min = options.pDeathUnfit;\n    max = options.pDeathFit;\n    return this.linear(min, max, fitness);\n  },\n  mortality: function(fitness, age, options) {\n    var exp, max;\n    exp = options.DIE_EXP * fitness;\n    max = options.MIN_AGE + (options.EXTRA_AGE * fitness);\n    return Math.pow(age / max, exp);\n  },\n  maybeDie: function(mortality) {\n    return Random.gamble(mortality);\n  },\n  maybeReproduce: function(fitness, mortality, options) {\n    var fertility;\n    fertility = 1 - mortality;\n    return Random.gamble(1 / (options.BABY_RATE / (fitness * fertility)));\n  },\n  mutationCounter: function(o, counter, options) {\n    var fo, fp;\n    counter || (counter = {\n      good: 0,\n      bad: 0\n    });\n    if (o.parent && o.age === 0) {\n      fo = this.fitness(o, options);\n      fp = this.fitness(o.parent, options);\n      if (fo > fp) {\n        counter.good += 1;\n      }\n      if (fo < fp) {\n        counter.bad += 1;\n      }\n    }\n    return counter;\n  },\n  copy: function(o, args) {\n    var g, o2;\n    g = Genome.copy({\n      genome: o.genome,\n      pmutate: args.pmutate,\n      scale: args.scale,\n      callback: args.callback\n    });\n    o2 = this[\"default\"]();\n    o2.genome = g;\n    o2.parent = o;\n    return o2;\n  },\n  tick: function(o, args) {\n    var absFit, allFit, counter, fitness, maxFit, minFit, mortality, relFit, result,\n      _this = this;\n    args.counter || (args.counter = {\n      births: 0,\n      deaths: 0\n    });\n    counter = this.mutationCounter(o, args.counter, args.options);\n    absFit = this.fitness(o, args.options);\n    if (args.siblings) {\n      allFit = _.map(args.siblings, function(o2) {\n        return _this.fitness(o2, args.options);\n      });\n      maxFit = _.max(allFit);\n      minFit = _.min(allFit);\n      relFit = (absFit - minFit) / (maxFit - minFit);\n      fitness = Utility.finite(this.linear(relFit, absFit, args.options.difficulty));\n    } else {\n      fitness = absFit;\n    }\n    mortality = this.mortality(fitness, o.age, args.options);\n    result = {\n      organisms: [o],\n      counter: counter\n    };\n    if (Random.gamble(this.pDeath(fitness, args.options))) {\n      counter.deaths += 1;\n      result.organisms = [];\n    } else if (Random.gamble(this.pDivide(fitness, args.options))) {\n      counter.births += 2;\n      counter.population += 2;\n      result.organisms = [this.copy(o, args), this.copy(o, args)];\n    } else {\n      o.age += 1;\n    }\n    return result;\n  }\n};\n\nmodule.exports = Organism;\n","var Random;\n\nRandom = {\n  range: function(min, max) {\n    return Math.round(Math.random() * (max - min) + min);\n  },\n  normal: function(scale) {\n    if (scale == null) {\n      scale = 1;\n    }\n    return this.box_muller()[0] * scale;\n  },\n  gamble: function(p) {\n    return Math.random() <= p;\n  },\n  box_muller: function() {\n    var c, rds, x, y;\n    x = 0;\n    y = 0;\n    rds = 0;\n    c = null;\n    while (rds === 0 || rds > 1) {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      rds = x * x + y * y;\n    }\n    c = Math.sqrt(-2 * Math.log(rds) / rds);\n    return [x * c, y * c];\n  }\n};\n\nmodule.exports = Random;\n","var Utility;\n\nUtility = {\n  mergeOptions: function(options) {\n    var defaults;\n    defaults = require('lib/descent/options');\n    return _.extend(defaults, options || {});\n  },\n  average: function(array) {\n    var sum;\n    if (array.length === 0) {\n      return 0;\n    }\n    sum = array.reduce(function(prev, current) {\n      return prev + current;\n    });\n    return sum / array.length;\n  },\n  finite: function(n) {\n    if (!isFinite(n)) {\n      return 0;\n    } else {\n      return n;\n    }\n  },\n  clone: function(obj) {\n    var flags, key, newInstance;\n    if (!(obj != null) || typeof obj !== 'object') {\n      return obj;\n    }\n    if (obj instanceof Date) {\n      return new Date(obj.getTime());\n    }\n    if (obj instanceof RegExp) {\n      flags = '';\n      if (obj.global != null) {\n        flags += 'g';\n      }\n      if (obj.ignoreCase != null) {\n        flags += 'i';\n      }\n      if (obj.multiline != null) {\n        flags += 'm';\n      }\n      if (obj.sticky != null) {\n        flags += 'y';\n      }\n      return new RegExp(obj.source, flags);\n    }\n    newInstance = new obj.constructor();\n    for (key in obj) {\n      newInstance[key] = this.clone(obj[key]);\n    }\n    return newInstance;\n  }\n};\n\nmodule.exports = Utility;\n","var MAX_MUTATE, MAX_VARIANCE, Organism, Utility, World, chart;\n\nUtility = require('lib/descent/utility');\n\nOrganism = require('lib/descent/organism');\n\nchart = require('lib/chart');\n\nMAX_MUTATE = 1;\n\nMAX_VARIANCE = 0;\n\nWorld = {\n  \"default\": function() {\n    return {\n      organisms: [],\n      stats: [],\n      initial: 100,\n      limit: 100,\n      age: 0\n    };\n  },\n  setup: function(w) {\n    var i, _i, _ref;\n    w.latest = {\n      population: w.initial,\n      bad: 0,\n      good: 0,\n      deaths: 0,\n      births: w.initial\n    };\n    for (i = _i = 1, _ref = w.initial; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {\n      w.organisms.push(Organism.random(1, 100));\n    }\n    return w;\n  },\n  simulate: function(w, options) {\n    var fit, latest, o, result, survived, survivor, _i, _j, _len, _len1, _ref, _ref1;\n    survived = [];\n    fit = [];\n    w.age += 1;\n    if (w.latest.population === 0) {\n      return w;\n    }\n    latest = Utility.clone(w.latest);\n    _ref = w.organisms;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      o = _ref[_i];\n      result = Organism.tick(o, {\n        target: options.targetGenome,\n        counter: latest,\n        pmutate: options.PMUTATE,\n        scale: options.MSCALE,\n        options: options,\n        siblings: w.organisms\n      });\n      _ref1 = result.organisms;\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n        survivor = _ref1[_j];\n        survived.push(survivor);\n        fit.push(Organism.fitness(survivor, options));\n      }\n      latest = result.counter;\n    }\n    survived = _.sortBy(survived, function(o) {\n      return -Organism.fitness(o, options);\n    }).slice(0, options.maxPop);\n    w.organisms = survived;\n    latest.population = w.organisms.length;\n    latest.fitness = Utility.finite(Utility.average(fit));\n    w.stats.push(latest);\n    w.latest = latest;\n    return w;\n  },\n  delay: function(w, options) {\n    var _this = this;\n    return w.timeout = setTimeout(function() {\n      var max, preparedStats;\n      _this.simulate(w, options);\n      $('svg').remove();\n      max = _.max(_.flatten(_.map(w.stats, function(s) {\n        return _.values(_.omit(s, 'good', 'bad', 'births', 'deaths', 'fitness'));\n      })));\n      preparedStats = _.map(w.stats, function(stat, i) {\n        var delta, deltaNames, s2, s3;\n        deltaNames = ['good', 'bad', 'births', 'deaths'];\n        delta = {};\n        _.each(deltaNames, function(name) {\n          return delta[name] = i === 0 ? stat[name] : stat[name] - w.stats[i - 1][name];\n        });\n        if (delta.good > MAX_MUTATE) {\n          MAX_MUTATE = delta.good;\n        }\n        if (delta.bad > MAX_MUTATE) {\n          MAX_MUTATE = delta.bad;\n        }\n        return s2 = _.extend({}, stat, {\n          fitness: stat.fitness * max,\n          good: (delta.good / MAX_MUTATE) * max / 2,\n          bad: (delta.bad / MAX_MUTATE) * max / 2,\n          births: delta.births,\n          deaths: delta.deaths\n        });\n        s3 = _.object(_.map(s2, function(value, key) {\n          return [key, value === 0 ? 0 : Math.log(value)];\n        }));\n        return s3;\n      });\n      if (w.age < options.maxTime && w.latest.population > 0 && w.latest.fitness < 1) {\n        _this.delay(w, options);\n      } else {\n        if (typeof w.finished === 'function') {\n          w.finished();\n        }\n      }\n      chart(preparedStats);\n      if (typeof options.callback === 'function') {\n        return options.callback(w);\n      }\n    }, options.delay);\n  }\n};\n\nmodule.exports = World;\n","var Router, application,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\napplication = require('application');\n\nmodule.exports = Router = (function(_super) {\n\n  __extends(Router, _super);\n\n  function Router() {\n    return Router.__super__.constructor.apply(this, arguments);\n  }\n\n  Router.prototype.routes = {\n    '': 'home'\n  };\n\n  Router.prototype.home = function() {\n    return $('body').html(application.homeView.render().el);\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","\n\n","var Collection,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = Collection = (function(_super) {\n\n  __extends(Collection, _super);\n\n  function Collection() {\n    return Collection.__super__.constructor.apply(this, arguments);\n  }\n\n  return Collection;\n\n})(Backbone.Collection);\n","var Model,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = Model = (function(_super) {\n\n  __extends(Model, _super);\n\n  function Model() {\n    return Model.__super__.constructor.apply(this, arguments);\n  }\n\n  return Model;\n\n})(Backbone.Model);\n","var HomeView, View, template,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nView = require('./view');\n\ntemplate = require('./templates/home');\n\nmodule.exports = HomeView = (function(_super) {\n\n  __extends(HomeView, _super);\n\n  function HomeView() {\n    return HomeView.__super__.constructor.apply(this, arguments);\n  }\n\n  HomeView.prototype.id = 'home-view';\n\n  HomeView.prototype.template = template;\n\n  return HomeView;\n\n})(View);\n","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var foundHelper, self=this;\n\n\n  return \"<div id=\\\"content\\\">\\n  <h1>Test</h1>\\n  <h2>Welcome!</h2>\\n  <ul>\\n    <li><a href=\\\"http://brunch.readthedocs.org/\\\">Documentation</a></li>\\n    <li><a href=\\\"https://github.com/brunch/brunch/issues\\\">Github Issues</a></li>\\n    <li><a href=\\\"https://github.com/brunch/twitter\\\">Twitter Example App</a></li>\\n    <li><a href=\\\"https://github.com/brunch/todos\\\">Todos Example App</a></li>\\n  </ul>\\n</div>\\n\";});","var View,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nrequire('lib/view_helper');\n\nmodule.exports = View = (function(_super) {\n\n  __extends(View, _super);\n\n  function View() {\n    this.render = __bind(this.render, this);\n    return View.__super__.constructor.apply(this, arguments);\n  }\n\n  View.prototype.template = function() {};\n\n  View.prototype.getRenderData = function() {};\n\n  View.prototype.render = function() {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  View.prototype.afterRender = function() {};\n\n  return View;\n\n})(Backbone.View);\n"]}